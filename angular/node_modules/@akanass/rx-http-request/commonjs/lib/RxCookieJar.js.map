{"version":3,"file":"RxCookieJar.js","sourceRoot":"","sources":["../../../src/lib/RxCookieJar.ts"],"names":[],"mappings":";;AAEA,2BAA2B;AAmGC,kBAAG;AA9F/B,gDAA6C;AAC7C,2CAAwC;AAKxC;;GAEG;AACH;IAII;;OAEG;IACH,YAAY,SAAoB;QAC5B,yBAAyB;QACzB,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAEnC,wBAAwB;QACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAChC,CAAC;IAED;;;;OAIG;IACH,IAAI,SAAS;QACT,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED;;;;;;;;OAQG;IACH,SAAS,CAAC,MAAc,EAAE,GAAqB,EAAE,OAAa;QAC1D,MAAM,CAAoB,uBAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE;YACrD,IAAI,CAAC,UAAU,CAAC,SAAS,CAAU,MAAM,EAAqB,GAAG,EAAQ,OAAO,CAAC,CAAC;YAElF,QAAQ,CAAC,IAAI,EAAE,CAAC;YAChB,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;;OAMG;IACH,eAAe,CAAC,GAAqB;QACjC,MAAM,CAAsB,OAAE,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAoB,GAAG,CAAC,CAAC,CAAC;IAC5F,CAAC;IAED;;;;;;OAMG;IACH,UAAU,CAAC,GAAqB;QAC5B,MAAM,CAAwB,OAAE,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAoB,GAAG,CAAC,CAAC,CAAC;IACzF,CAAC;IAED;;;;;;OAMG;IACK,kBAAkB,CAAC,SAAoB;QAC3C,oCAAoC;QACpC,EAAE,CAAC,CAAC,CAAC,SAAS;YACV,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,mBAAmB;YAC3E,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,mBAAmB;YACjF,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,mBAAmB,CAAC,CAAC,CAAC;YAC/E,MAAM,IAAI,SAAS,CAAC,8CAA8C,CAAC,CAAC;QACxE,CAAC;IACL,CAAC;CACJ;AAhFD,kCAgFC","sourcesContent":["// import libraries\nimport * as request from 'request';\nimport * as url from 'url';\n\nimport Cookie = request.Cookie;\nimport CookieJar = request.CookieJar;\n\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\n\n// native javascript's objects typings\ndeclare const Object: any;\n\n/**\n * Class definition\n */\nexport class RxCookieJar {\n    // private property to store cookie jar object\n    private _cookieJar: CookieJar;\n\n    /**\n     * Class constructor\n     */\n    constructor(cookieJar: CookieJar) {\n        // check cookie parameter\n        this._checkRequestParam(cookieJar);\n\n        // set cookie jar object\n        this._cookieJar = cookieJar;\n    }\n\n    /**\n     * Returns private property _cookieJar\n     *\n     * @return {CookieJar}\n     */\n    get cookieJar(): CookieJar {\n        return this._cookieJar;\n    }\n\n    /**\n     * Function to set a new cookie jar\n     *\n     * @param cookie {Cookie}\n     * @param uri {string | url.Url}\n     * @param options {any}\n     *\n     * @return {Observable<void>}\n     */\n    setCookie(cookie: Cookie, uri: string | url.Url, options?: any): Observable<void> {\n        return <Observable<void>> Observable.create((observer) => {\n            this._cookieJar.setCookie(<Cookie> cookie, <string | url.Url> uri, <any> options);\n\n            observer.next();\n            observer.complete();\n        });\n    }\n\n    /**\n     * Function to get cookie string\n     *\n     * @param uri {string | url.Url}\n     *\n     * @return {Observable<string>}\n     */\n    getCookieString(uri: string | url.Url): Observable<string> {\n        return <Observable<string>> of(this._cookieJar.getCookieString(<string | url.Url> uri));\n    }\n\n    /**\n     * Funtion to get an array of cookies\n     *\n     * @param uri {string | url.Url}\n     *\n     * @return {Observable<Cookie[]>}\n     */\n    getCookies(uri: string | url.Url): Observable<Cookie[]> {\n        return <Observable<Cookie[]>> of(this._cookieJar.getCookies(<string | url.Url> uri));\n    }\n\n    /**\n     * Function to check existing function in object passed in parameter for a new instance\n     *\n     * @param cookieJar {CookieJar}\n     *\n     * @private\n     */\n    private _checkRequestParam(cookieJar: CookieJar) {\n        // check existing function in object\n        if (!cookieJar ||\n            Object.prototype.toString.call(cookieJar.setCookie) !== '[object Function]' ||\n            Object.prototype.toString.call(cookieJar.getCookieString) !== '[object Function]' ||\n            Object.prototype.toString.call(cookieJar.getCookies) !== '[object Function]') {\n            throw new TypeError('Parameter must be a valid `CookieJar` object');\n        }\n    }\n}\n\n/**\n * Export all initial elements\n */\nexport { CookieJar, Cookie, url };\n"]}